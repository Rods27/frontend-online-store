{"ast":null,"code":"var _jsxFileName = \"/home/rodsubuntu/vscode/online-store-website/src/components/ProductCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { productPrice, productItem, productDetails, productQuantity, cartListHandler } from '../actions';\n\nclass ProductCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quantity: 1,\n      total: 0\n    };\n    this.addItemsToCart = this.addItemsToCart.bind(this);\n    this.renderDetails = this.renderDetails.bind(this);\n  }\n\n  addItemsToCart() {\n    const {\n      product,\n      addItemCart,\n      dispatchPrice,\n      dispatchProduct,\n      dispatchQuantity,\n      globalID,\n      dispatchCartList,\n      stateCart\n    } = this.props;\n    const {\n      title,\n      thumbnail,\n      price,\n      id\n    } = product;\n    const {\n      quantity\n    } = this.state;\n\n    if (!globalID.includes(id)) {\n      dispatchQuantity(id, 1);\n      dispatchPrice(price);\n      dispatchProduct(product, id);\n      dispatchCartList(product);\n      addItemCart({\n        product: {\n          title,\n          thumbnail,\n          price,\n          id,\n          quantity\n        }\n      }, price);\n\n      if (stateCart) {\n        stateCart.map(element => {\n          console.log(element.id);\n        });\n      }\n    } else {\n      window.alert('Item jÃ¡ adicionado no carrinho de compras!');\n    }\n  }\n\n  renderDetails() {\n    const {\n      dispatchProductDetails,\n      product\n    } = this.props;\n    document.querySelector('.obscure-background').style.display = 'flex';\n    dispatchProductDetails(true, product);\n  }\n\n  render() {\n    const {\n      product,\n      x\n    } = this.props;\n    const {\n      title,\n      thumbnail,\n      price,\n      id\n    } = product;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      key: title,\n      \"data-testid\": \"product\",\n      className: \"product-content\",\n      style: {\n        transform: `translateY(${x}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-div\",\n      onClick: () => this.renderDetails(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img\",\n      src: thumbnail,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-title-div\",\n      style: {\n        width: '196px',\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addToCart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"R$\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, `${price}`), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"add-button\",\n      \"data-testid\": \"product-add-to-cart\",\n      onClick: () => this.addItemsToCart(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-plus-square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string\n  }).isRequired,\n  addItemCart: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  globalID: state.product.id,\n  stateCart: state.product.cart\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchPrice: price => dispatch(productPrice(price)),\n  dispatchProduct: (product, id) => dispatch(productItem(product, id)),\n  dispatchProductDetails: (toogle, product) => dispatch(productDetails(toogle, product)),\n  dispatchQuantity: (id, quantity) => dispatch(productQuantity(id, quantity)),\n  dispatchCartList: cartItem => dispatch(cartListHandler(cartItem))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["/home/rodsubuntu/vscode/online-store-website/src/components/ProductCard.js"],"names":["React","Component","PropTypes","Link","connect","productPrice","productItem","productDetails","productQuantity","cartListHandler","ProductCard","constructor","state","quantity","total","addItemsToCart","bind","renderDetails","product","addItemCart","dispatchPrice","dispatchProduct","dispatchQuantity","globalID","dispatchCartList","stateCart","props","title","thumbnail","price","id","includes","map","element","console","log","window","alert","dispatchProductDetails","document","querySelector","style","display","render","x","transform","width","textAlign","marginLeft","propTypes","shape","string","number","isRequired","mapStateToProps","cart","mapDispatchToProps","dispatch","toogle","cartItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { productPrice, productItem, productDetails, productQuantity, cartListHandler } from '../actions';\n\nclass ProductCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quantity: 1,\n      total: 0,\n    };\n    this.addItemsToCart = this.addItemsToCart.bind(this);\n    this.renderDetails = this.renderDetails.bind(this);\n  }\n\n  addItemsToCart() {\n    const { product, addItemCart, dispatchPrice, dispatchProduct, dispatchQuantity, globalID, dispatchCartList, stateCart } = this.props;\n    const { title, thumbnail, price, id } = product;\n    const { quantity } = this.state;\n    if (!globalID.includes(id)) {\n      dispatchQuantity(id, (1))\n      dispatchPrice(price)\n      dispatchProduct(product, id)\n      dispatchCartList(product)\n      addItemCart({ product: { title, thumbnail, price, id, quantity } }, price);\n      if (stateCart) {\n        stateCart.map(element => {\n            console.log(element.id)\n          \n        })\n      }\n    } else {\n      window.alert ('Item jÃ¡ adicionado no carrinho de compras!')\n    }\n\n  }\n\n  renderDetails() {\n    const { dispatchProductDetails, product } = this.props;\n    document.querySelector('.obscure-background').style.display = 'flex';\n    dispatchProductDetails(true, product)\n  }\n  \n\n  render() {\n    const { product, x } = this.props;\n    const { title, thumbnail, price, id } = product;\n\n    return (\n      <section\n      key={ title }\n      data-testid=\"product\"\n      className=\"product-content\"\n      style={ { transform: `translateY(${x}%)` } }\n      >\n        <div className=\"img-div\" onClick={ () => this.renderDetails() }>\n          <img className=\"img\" src={ thumbnail } alt={ title } />\n        </div>\n      <div className=\"product-title-div\"\n      style={{width:'196px', textAlign:'left'}}>\n        <span>{title}</span>\n      </div>\n        <div className=\"addToCart\">\n          <span style={{marginLeft: '10px'}}>R$</span>\n          <span className=\"price\">{`${price}`}</span>\n          <button\n            type=\"button\"\n            className=\"add-button\"\n            data-testid=\"product-add-to-cart\"\n            onClick={ () => this.addItemsToCart() }\n          >\n            {/* https://fontawesome.com/icons/plus-square?style=solid */}\n            <i class=\"fas fa-plus-square\"></i>\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n  }).isRequired,\n  addItemCart: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  globalID: state.product.id,\n  stateCart: state.product.cart,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchPrice: (price) => dispatch(productPrice(price)),\n  dispatchProduct: (product, id) => dispatch(productItem(product, id)),\n  dispatchProductDetails: (toogle, product) => dispatch(productDetails(toogle, product)),\n  dispatchQuantity: (id, quantity) => dispatch(productQuantity(id, quantity)),\n  dispatchCartList: (cartItem) => dispatch(cartListHandler(cartItem)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);\n\n"]},"metadata":{},"sourceType":"module"}