{"ast":null,"code":"var _jsxFileName = \"/home/rodsubuntu/vscode/online-store-website/src/components/ProductCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { productPrice } from '../actions';\n\nclass ProductCard extends Component {\n  constructor() {\n    super();\n    this.addItemsToCart = this.addItemsToCart.bind(this);\n    this.state = {\n      quantity: 1,\n      total: 0\n    };\n  }\n\n  addItemsToCart() {\n    const {\n      product,\n      addItemCart,\n      dispatchPrice,\n      dispatchProduct\n    } = this.props;\n    const {\n      title,\n      thumbnail,\n      price,\n      id\n    } = product;\n    const {\n      quantity,\n      total\n    } = this.state;\n    dispatchPrice(price);\n    dispatchProduct(product);\n    addItemCart({\n      product: {\n        title,\n        thumbnail,\n        price,\n        id,\n        quantity\n      }\n    }, price);\n  }\n\n  render() {\n    const {\n      product,\n      x\n    } = this.props;\n    const {\n      title,\n      thumbnail,\n      price,\n      id\n    } = product;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      key: title,\n      \"data-testid\": \"product\",\n      className: \"product-content\",\n      style: {\n        transform: `translateY(${x}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      \"data-testid\": \"product-detail-link\",\n      to: {\n        pathname: `/ProductDetails/${id}`,\n        state: product\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img\",\n      src: thumbnail,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-details-div\",\n      style: {\n        width: '196px',\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addToCart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"R$\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, `${price}`), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"add-button\",\n      \"data-testid\": \"product-add-to-cart\",\n      onClick: this.addItemsToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-plus-square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string\n  }).isRequired,\n  addItemCart: PropTypes.string.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchPrice: price => dispatch(productPrice(price)),\n  dispatchProduct: product => dispatch(product(product))\n});\n\nexport default connect(null, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["/home/rodsubuntu/vscode/online-store-website/src/components/ProductCard.js"],"names":["React","Component","PropTypes","Link","connect","productPrice","ProductCard","constructor","addItemsToCart","bind","state","quantity","total","product","addItemCart","dispatchPrice","dispatchProduct","props","title","thumbnail","price","id","render","x","transform","pathname","width","textAlign","marginLeft","propTypes","shape","string","number","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { productPrice } from '../actions';\n\nclass ProductCard extends Component {\n  constructor() {\n    super();\n    this.addItemsToCart = this.addItemsToCart.bind(this);\n    this.state = {\n      quantity: 1,\n      total: 0,\n    };\n  }\n\n  addItemsToCart() {\n    const { product, addItemCart, dispatchPrice, dispatchProduct } = this.props;\n    const { title, thumbnail, price, id } = product;\n    const { quantity, total } = this.state;\n    dispatchPrice(price)\n    dispatchProduct(product)\n    addItemCart({ product: { title, thumbnail, price, id, quantity } }, price);\n  }\n\n  render() {\n    const { product, x } = this.props;\n    const { title, thumbnail, price, id } = product;\n    return (\n      <section\n      key={ title }\n      data-testid=\"product\"\n      className=\"product-content\"\n      style={ { transform: `translateY(${x}%)` } }\n      >\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ { pathname: `/ProductDetails/${id}`, state: product } }\n        >\n          <div className=\"img-div\">\n            <img className=\"img\" src={ thumbnail } alt={ title } />\n          </div>\n        </Link>\n      <div className=\"product-details-div\"\n      style={{width:'196px', textAlign:'left'}}>\n        <span>{title}</span>\n      </div>\n        <div className=\"addToCart\">\n          <span style={{marginLeft: '10px'}}>R$</span>\n          <span className=\"price\">{`${price}`}</span>\n          <button\n            type=\"button\"\n            className=\"add-button\"\n            data-testid=\"product-add-to-cart\"\n            onClick={ this.addItemsToCart }\n          >\n            {/* https://fontawesome.com/icons/plus-square?style=solid */}\n            <i class=\"fas fa-plus-square\"></i>\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n  }).isRequired,\n  addItemCart: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchPrice: (price) => dispatch(productPrice(price)),\n  dispatchProduct: (product) => dispatch(product(product))\n});\n\nexport default connect(null, mapDispatchToProps)(ProductCard);\n"]},"metadata":{},"sourceType":"module"}